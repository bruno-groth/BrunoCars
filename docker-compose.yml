version: '3.8'

services:
  backend:
    container_name: api
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/var/www/html
    working_dir: /var/www/html/src
    depends_on:
      - mysql
    networks:
      - app-network
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    command: php artisan serve --host=0.0.0.0 --port=8000

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/app:/app
      - ./frontend/app/node_modules:/app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - app-network
    depends_on:
      - backend

  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

  mysql:
    container_name: mysql
    image: mysql:8.3
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

  json-api:
    container_name: json-api
    build:
      context: ./json-api
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./json-api:/app
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data: